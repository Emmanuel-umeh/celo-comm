[{"C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\index.js":"1","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\App.js":"2","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\index.js":"3","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\CreateContent\\CreateContent.jsx":"5","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\BlogsList\\BlogsList.jsx":"6","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\BlogDetail\\BlogDetails.jsx":"7","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\Footer\\Footer.jsx":"8","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\utils\\slugify.js":"9","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\utils\\processMd.js":"10"},{"size":176,"mtime":1651894718068,"results":"11","hashOfConfig":"12"},{"size":8033,"mtime":1651908026706,"results":"13","hashOfConfig":"12"},{"size":314,"mtime":1651738091405,"results":"14","hashOfConfig":"12"},{"size":960,"mtime":1651909588761,"results":"15","hashOfConfig":"12"},{"size":3210,"mtime":1651738595908,"results":"16","hashOfConfig":"12"},{"size":2304,"mtime":1651733875662,"results":"17","hashOfConfig":"12"},{"size":4212,"mtime":1651732652969,"results":"18","hashOfConfig":"12"},{"size":156,"mtime":1651155158714,"results":"19","hashOfConfig":"12"},{"size":186,"mtime":1651155158722,"results":"20","hashOfConfig":"12"},{"size":213,"mtime":1651661058394,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lr9i31",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\index.js",[],"C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\App.js",["45","46","47"],"import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nimport {\r\n  Header,\r\n  CreateContent,\r\n  BlogsList,\r\n  BlogDetails,\r\n  Footer,\r\n} from \"./components\";\r\nimport \"./App.scss\";\r\nimport DBlogAbi from \"./contract/DBlog.abi.json\";\r\nimport erc20abi from \"./contract/erc20.abi.json\";\r\n\r\nconst ERC20_DECIMALS = 18;\r\nconst dBlogContractAddress = \"0xF431805f4D96144758a160C6b3f0ed78D29b16BA\";\r\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\r\n\r\nconst App = () => {\r\n  // vars\r\n  const [blog, setBlog] = useState();\r\n  const [posts, setPosts] = useState();\r\n  const [postsCount, setPostsCount] = useState();\r\n  const [activePage, setActivePage] = useState(\"posts\");\r\n  const [kit, setKit] = useState();\r\n  const [cUsdBalance, setCUsdBalance] = useState(0);\r\n  const [userWalletAddress, setUserWalletAddress] = useState(\r\n    \"0x00000000000000000000\"\r\n  );\r\n  const [dBlogContract, setDBlogContract] = useState();\r\n\r\n  const [alertMessage, setalertMessage] = useState();\r\n  const [showAlertBox, setShowAlertBox] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    connectWallet();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (kit && userWalletAddress) {\r\n      getUserBalance();\r\n    }\r\n  }, [kit, userWalletAddress]);\r\n\r\n  useEffect(() => {\r\n    if (dBlogContract) {\r\n      getFeed();\r\n    }\r\n  }, [dBlogContract]);\r\n\r\n  // //\r\n\r\n  const handleNavItemClick = async (active) => {\r\n    await getFeed();\r\n    setActivePage(active);\r\n  };\r\n\r\n  const alertOn = (aletMsg) => {\r\n    setalertMessage(aletMsg);\r\n    setShowAlertBox(true);\r\n  };\r\n\r\n  const alertOff = () => setShowAlertBox(false);\r\n\r\n  // approve payment before transferring tokens\r\n  const approvePayment = async (_amount) => {\r\n    const cUSDContract = new kit.web3.eth.Contract(\r\n      erc20abi,\r\n      cUSDContractAddress\r\n    );\r\n    const response = await cUSDContract.methods\r\n      .approve(dBlogContractAddress, _amount)\r\n      .send({ from: userWalletAddress });\r\n    return response;\r\n  };\r\n\r\n  // connect wallet to app\r\n  const connectWallet = async () => {\r\n    if (window.celo) {\r\n      alertOn(\"⚠️ Please approve this DApp to use it.\");\r\n      try {\r\n        await window.celo.enable();\r\n        const web3 = new Web3(window.celo);\r\n        let kit = newKitFromWeb3(web3);\r\n\r\n        const accounts = await kit.web3.eth.getAccounts();\r\n        const defaultAccount = accounts[0];\r\n        kit.defaultAccount = defaultAccount;\r\n\r\n        setKit(kit);\r\n        setUserWalletAddress(defaultAccount);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\r\n        \"You need to install the celo wallet extension in order to use this app\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // get both cUSD balance and RP balance\r\n  const getUserBalance = async () => {\r\n    console.log(\"Getting user balance...\");\r\n    try {\r\n      const balance = await kit.getTotalBalance(userWalletAddress);\r\n      const cUsdBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n      const dBlogContract = new kit.web3.eth.Contract(\r\n        DBlogAbi,\r\n        dBlogContractAddress\r\n      );\r\n\r\n      setCUsdBalance(cUsdBalance);\r\n      setDBlogContract(dBlogContract);\r\n    } catch (error) {\r\n      console.log(\"Error occured while trying to get user balances: \" + error);\r\n    }\r\n  };\r\n\r\n  // create new post\r\n  const getNewlyCreatedPost = async (slug, imgUrl, title, content) => {\r\n    alertOn(\"Creating new post ...\");\r\n    try {\r\n      await dBlogContract.methods\r\n        .createPost(slug, imgUrl, title, content, new Date().toUTCString())\r\n        .send({ from: userWalletAddress });\r\n    } catch (error) {\r\n      console.log(\"New error while creating new post: \" + error);\r\n    }\r\n\r\n    await getFeed();\r\n    setActivePage(\"posts\");\r\n    alertOff();\r\n  };\r\n\r\n  // load all post feed from contract\r\n  const getFeed = async () => {\r\n    alertOn(\"Loading posts ...\");\r\n    const slugs = await dBlogContract.methods.getSlugs().call();\r\n    let postsCount = await dBlogContract.methods.getPostLength().call();\r\n    const _posts = [];\r\n    for (let i = 0; i < slugs.length; i++) {\r\n      let postSlug = slugs[i];\r\n      let blogPost = new Promise(async (resolve, reject) => {\r\n        let getPost = await dBlogContract.methods.getPost(postSlug).call();\r\n        resolve({\r\n          id: getPost[0],\r\n          slug: getPost[1],\r\n          coverImgUrl: getPost[2],\r\n          authorAddress: getPost[3],\r\n          title: getPost[4],\r\n          content: getPost[5],\r\n          datePublished: getPost[6],\r\n          likes: getPost[7],\r\n          comments: getPost[8],\r\n        });\r\n      });\r\n      _posts.push(blogPost);\r\n    }\r\n    const postFeed = await Promise.all(_posts);\r\n    setPosts(postFeed);\r\n    setPostsCount(postsCount);\r\n    alertOff();\r\n  };\r\n\r\n  // like a post with slug @postSlug\r\n  const likePost = async (postSlug) => {\r\n    alertOn(\"Liking this post ...\");\r\n    try {\r\n      await dBlogContract.methods\r\n        .likePost(postSlug)\r\n        .send({ from: userWalletAddress });\r\n    } catch (error) {\r\n      console.log(\"New Error occured while liking post: \" + error);\r\n    }\r\n\r\n    getFeed();\r\n    setActivePage(\"posts\");\r\n    alertOff();\r\n  };\r\n\r\n  // un-like a post with slug @postSlug\r\n  const unlikePost = async (postSlug) => {\r\n    alertOn(\"Un-Liking this post ...\");\r\n    try {\r\n      await dBlogContract.methods\r\n        .unlikePost(postSlug)\r\n        .send({ from: userWalletAddress });\r\n    } catch (error) {\r\n      console.log(\"New Error occured while un-liking this post: \" + error);\r\n    }\r\n\r\n    getFeed();\r\n    setActivePage(\"posts\");\r\n    alertOff();\r\n  };\r\n\r\n  // comment on post\r\n  const makeComment = async (postSlug, comment) => {\r\n    alertOn(\"Saving comment ...\");\r\n    try {\r\n      await dBlogContract.methods\r\n        .makeComment(postSlug, comment)\r\n        .send({ from: userWalletAddress });\r\n    } catch (error) {\r\n      console.log(\"New Error occured while saving comment: \" + error);\r\n    }\r\n\r\n    getFeed();\r\n    setActivePage(\"posts\");\r\n    alertOff();\r\n  };\r\n\r\n  const buyCoffee = async (postSlug, _amount) => {\r\n    alertOn(\"Buying this author a coffee ...\");\r\n    const amount = new BigNumber(_amount).shiftedBy(ERC20_DECIMALS);\r\n    try {\r\n      await approvePayment(amount);\r\n    } catch (error) {\r\n      console.log(\r\n        \"New Error while trying to approve buyCoffee payment: \" + error\r\n      );\r\n    }\r\n\r\n    try {\r\n      await dBlogContract.methods\r\n        .buyCoffee(postSlug, amount)\r\n        .send({ from: userWalletAddress });\r\n    } catch (error) {\r\n      console.log(\r\n        \"New error while trying to pay for coffee via contract: \" + error\r\n      );\r\n    }\r\n\r\n    setTimeout(\r\n      () =>\r\n        alertOn(\"Successfully bought \" + _amount + \" coffee for this author\"),\r\n      () => alertOff(),\r\n      5000\r\n    );\r\n    await getUserBalance();\r\n    setActivePage(\"posts\");\r\n  };\r\n\r\n  //\r\n  return (\r\n    <div>    \r\n      <Header\r\n        cUsdBalance={cUsdBalance}\r\n        userwa={userWalletAddress}\r\n        handleNavItemClick={handleNavItemClick}\r\n      />\r\n      {showAlertBox && (\r\n        <div className=\"alert\">\r\n          <div className=\"\">{alertMessage}</div>\r\n        </div>\r\n      )}\r\n      {activePage === \"write\" && (\r\n        <CreateContent\r\n          postsCount={postsCount}\r\n          getNewlyCreatedPost={getNewlyCreatedPost}\r\n        />\r\n      )}\r\n      {activePage === \"posts\" && (\r\n        <BlogsList\r\n          posts={posts}\r\n          getDetails={setBlog}\r\n          showDetails={handleNavItemClick}\r\n        />\r\n      )}\r\n      {activePage === \"details\" && (\r\n        <BlogDetails\r\n          userwa={userWalletAddress}\r\n          likePost={likePost}\r\n          unlikePost={unlikePost}\r\n          buyCoffee={buyCoffee}\r\n          makeComment={makeComment}\r\n          blog={blog}\r\n        />\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\index.js",[],"C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\CreateContent\\CreateContent.jsx",[],"C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\BlogsList\\BlogsList.jsx",["48"],"import React, { useEffect } from \"react\";\r\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\r\nimport { readingTime } from \"reading-time-estimator\";\r\nimport processMd from \"../utils/processMd\";\r\n\r\nimport \"./BlogsList.scss\";\r\n\r\nconst BlogPreview = (props) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  const posts = props.posts;\r\n  const handleTitleClick = (blog) => {\r\n    props.showDetails(\"details\");\r\n    props.getDetails(blog);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"app__blogPreview\">\r\n        <div className=\"app__blogPreview-body\">\r\n          {posts?.map((blog) => (\r\n            <div className=\"app__blogPreview-item\">\r\n              <img src={blog.coverImgUrl} />\r\n              <div className=\"preview-details\">\r\n                <div className=\"pd-authorAvatar\">\r\n                  <Jazzicon\r\n                    diameter={50}\r\n                    seed={jsNumberForAddress(blog.authorAddress)}\r\n                  />\r\n                </div>\r\n                {/* <img src={blog.authoAvatarUrl} /> */}\r\n                <div className=\"preview-content\">\r\n                  <div className=\"preview-datePublished\">\r\n                    {blog.datePublished}\r\n                  </div>\r\n                  <div className=\"preview-readingTime\">\r\n                    {readingTime(blog.content).minutes} min read\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleTitleClick(blog)}\r\n                    className=\"preview-title\"\r\n                  >\r\n                    {blog.title}\r\n                  </div>\r\n                  <div\r\n                    className=\"preview-content--content\"\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: processMd(blog.content.slice(0, 120) + \" ...\"),\r\n                    }}\r\n                  />\r\n                  <div className=\"preview-bottom\">\r\n                    <div className=\"preview-likes\">❤ {blog.likes.length}</div>\r\n                    <div className=\"preview-comments\">\r\n                      💬 {blog.comments.length}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogPreview;\r\n","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\BlogDetail\\BlogDetails.jsx",["49"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { readingTime } from \"reading-time-estimator\";\r\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\r\nimport \"./BlogDetails.scss\";\r\nimport processMd from \"../utils/processMd\";\r\n\r\nconst BlogDetails = (props) => {\r\n  const {\r\n    id,\r\n    slug,\r\n    coverImgUrl,\r\n    authorAddress,\r\n    title,\r\n    content,\r\n    datePublished,\r\n    likes,\r\n    comments,\r\n  } = props.blog;\r\n\r\n  const [coffeeQty, setCoffeeQty] = useState(1);\r\n  const [commentMessage, setCommentMessage] = useState();\r\n  const [, updateState] = useState();\r\n\r\n  const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const handleCoffeQtyChange = (e) => {\r\n    setCoffeeQty(e.target.value);\r\n  };\r\n\r\n  const buyCoffee = () => {\r\n    props.buyCoffee(slug, coffeeQty);\r\n    console.log(\r\n      \"Successfully bought \" +\r\n        coffeeQty +\r\n        \" coffee for \" +\r\n        authorAddress +\r\n        \"'s post with id: \" +\r\n        id\r\n    );\r\n  };\r\n\r\n  const likePost = async () => {\r\n    likes.includes(props.userwa)\r\n      ? await props.unlikePost(slug)\r\n      : await props.likePost(slug);\r\n\r\n    forceUpdate();\r\n  };\r\n\r\n  const sendComment = async () => {\r\n    await props.makeComment(slug, commentMessage);\r\n    console.log(\"Successfully said \" + commentMessage + \" on post \" + slug);\r\n    setCommentMessage(); // clears edit comment field\r\n  };\r\n\r\n  return (\r\n    <div className=\"app__blogDetail\">\r\n      <div className=\"app__blogDetail-content\">\r\n        <img src={coverImgUrl} />\r\n        <div className=\"info\">\r\n          <div className=\"info-authorAvatar\">          \r\n            <Jazzicon diameter={50} seed={jsNumberForAddress(authorAddress)} />\r\n          </div>\r\n          <div className=\"details\">\r\n            <div className=\"read-time\">\r\n              {readingTime(content).minutes} min read\r\n            </div>\r\n            <div className=\"date-published\">Published on {datePublished}</div>\r\n          </div>\r\n          <div className=\"reactions\">\r\n            <div\r\n              className=\"l-count\"\r\n              style={{ color: likes.includes(props.userwa) ? \"red\" : \"\" }}\r\n              onClick={() => likePost()}\r\n            >\r\n              ❤ {likes.length}\r\n            </div>\r\n            <div className=\"c-count\">\r\n              <a href=\"#comments-section\">💬 {comments.length}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"title\">{title}</div>\r\n        <hr className=\"hr-below-title--bd\" />\r\n        <div\r\n          className=\"content\"\r\n          dangerouslySetInnerHTML={{ __html: processMd(content) }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"sponsor\">\r\n        <div className=\"sponsor-txt\">Enjoy reading this post?</div>\r\n        <div className=\"sponsor-input\">\r\n          <span>Each cup costs 1 cUSD</span>\r\n          <input\r\n            type=\"number\"\r\n            min={1}\r\n            value={coffeeQty}\r\n            onChange={handleCoffeQtyChange}\r\n          />\r\n        </div>\r\n        <div onClick={() => buyCoffee()} className=\"buy\">\r\n          Buy me a coffee <span>🥤</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"comments-section\" className=\"comments\">\r\n        <hr />\r\n        <div>\r\n          <textarea\r\n            placeholder=\"Enter your comment here\"\r\n            value={commentMessage}\r\n            onChange={(e) => setCommentMessage(e.target.value)}\r\n          />\r\n          <div className=\"comment-btn\" onClick={() => sendComment()}>\r\n            Comment\r\n          </div>\r\n        </div>\r\n        <div className=\"comment-list\">\r\n          {comments.length > 0 && <p>Comments</p>}\r\n          {comments?.map((comment) => (\r\n            <div className=\"comment-item\">\r\n              <div className=\"author-avatar-c\">\r\n                <Jazzicon\r\n                  diameter={50}\r\n                  seed={jsNumberForAddress(comment.commenterAddress)}\r\n                />\r\n              </div>\r\n              <div className=\"comment-item\">{comment.commentMessage}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\utils\\slugify.js",[],"C:\\Users\\USER\\Documents\\Dev\\BlockCC\\Dacade\\celo-comm\\src\\components\\utils\\processMd.js",[],{"ruleId":"50","severity":1,"message":"51","line":43,"column":6,"nodeType":"52","endLine":43,"endColumn":8,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":49,"column":6,"nodeType":"52","endLine":49,"endColumn":30,"suggestions":"55"},{"ruleId":"50","severity":1,"message":"56","line":55,"column":6,"nodeType":"52","endLine":55,"endColumn":21,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":23,"column":15,"nodeType":"60","endLine":23,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":63,"column":9,"nodeType":"60","endLine":63,"endColumn":34},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connectWallet'. Either include it or remove the dependency array.","ArrayExpression",["61"],"React Hook useEffect has a missing dependency: 'getUserBalance'. Either include it or remove the dependency array.",["62"],"React Hook useEffect has a missing dependency: 'getFeed'. Either include it or remove the dependency array.",["63"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [connectWallet]",{"range":"70","text":"71"},"Update the dependencies array to be: [getUserBalance, kit, userWalletAddress]",{"range":"72","text":"73"},"Update the dependencies array to be: [dBlogContract, getFeed]",{"range":"74","text":"75"},[1281,1283],"[connectWallet]",[1384,1408],"[getUserBalance, kit, userWalletAddress]",[1491,1506],"[dBlogContract, getFeed]"]